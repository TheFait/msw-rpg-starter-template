@Component
script UIGMAchievementTool_EditItem extends Component

	property TextComponent Id = nil

	property TextComponent State = nil

	property TextComponent Step = nil

	property TextComponent Value = nil

	property TextComponent BeginTime = nil

	property TextComponent CompleteTime = nil

	property any EditUserData = nil

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		local entity = self.Entity
		
		self.Id = entity:GetChildByName("Label_ID").TextComponent
		self.State = entity:GetChildByName("Label_State").TextComponent
		self.Step = entity:GetChildByName("Label_Step").TextComponent
		self.Value = entity:GetChildByName("Label_Value").TextComponent
		self.BeginTime = entity:GetChildByName("Label_BeginTime").TextComponent
		self.CompleteTime = entity:GetChildByName("Label_CompleteTime").TextComponent
		
		local btn_reset = entity:GetChildByName("Btn_Reset")
		btn_reset:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Reset)
	end

	@ExecSpace("ClientOnly")
	method void Set(UserAchievementData s, integer timeOffset)
		self.EditUserData = s
		
		self.Id.Text = tostring(s.Id)
		self.State.Text = tostring(s.State)
		self.Step.Text = tostring(s.Step)
		self.Value.Text = tostring(s.Value)
		
		local hourElapsed = 60 * 60 * 1000
		local offsetElapsed = timeOffset * hourElapsed
		
		if s.BeginTime == 0 then
			self.BeginTime.Text = "0"
		else
			self.BeginTime.Text = DateTime(s.BeginTime + offsetElapsed):ToFormattedString("yyyy-MM-dd HH:mm:ss")	
		end
		
		if s.CompleteTime == 0 then
			self.CompleteTime.Text = "0"
		else
			self.CompleteTime.Text = DateTime(s.CompleteTime + offsetElapsed):ToFormattedString("yyyy-MM-dd HH:mm:ss")
		end
	end

	@ExecSpace("ClientOnly")
	method void Clear()
		self.EditUserData = nil
		
		self.Id.Text = ""
		self.State.Text = ""
		self.Step.Text = ""
		self.Value.Text = ""
		self.BeginTime.Text = ""
		self.CompleteTime.Text = ""
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Reset()
		local evt = ButtonClickEvent(self.Entity)
		self.Entity.Parent:SendEvent(evt)
	end

end