{
  "Id": "",
  "GameId": "",
  "EntryKey": "scriptfile://793a6b20-a4d8-4ddb-8e1d-8e57ce119320",
  "ContentType": "x-mod/scriptfile",
  "Content": "",
  "Usage": 0,
  "UsePublish": 1,
  "UseService": 0,
  "CoreVersion": "1.25.0.0",
  "StudioVersion": "0.1.0.0",
  "DynamicLoading": 0,
  "ContentProto": {
    "Use": "Json",
    "Json": {
      "Name": "ReadMe_Achievement",
      "Id": "793a6b20-a4d8-4ddb-8e1d-8e57ce119320",
      "Script": "--[[\n# Achievement\nThis package provides common achievement features in the game.\n\n=======================================\n## Features\n\n1. Achievement Features\nThe achievement progress increases based on the user's actions, and rewards can be granted upon completion.\n\nRepeatable achievements (daily, weekly, etc.) can be added.\n\nAchievements can have multiple steps. The value increases up to the last step's value, regardless of the current step.\n\nA parent achievement can be assigned, and it will be completed once all child achievements are finished.\n\nEven if achievement data is modified incorrectly, user data is designed to be preserved as much as possible.\n\n2. Achievement User Data Management Tool\nAllows viewing and modifying user achievement data.\n\n=======================================\n## Recommendation\n\nIt is recommended to set PlayerEntityAuthorityCheck to true in WorldConfig.\nIf this setting is false, the server function is exposed to all clients, which may lead to security vulnerabilities.\n\n=======================================\n## Installation\n\nThis package is available for use after import, but some initial setup is required.\n\n1. The following components need to be added to the DefaultPlayer.\n- PlayerDBManager, PlayerData, PlayerAchievement, PlayerQuest\n\n2. Admin Permissions Check for Tool Usage\nYou need to check if the user has admin permissions using the Util:IsAdmin function.\n\n3. UI Path Configuration\nYou need to set the spawn paths for the message UI and the tool UI.\nThe ParentUIPath and ParentUIToolPath can be modified in AchievementSampleLogic.\nBy default, they are set to \"/ui/DefaultGroup\".\n\n4. DataStorage Name Configuration\nThe name you are using might overlap with existing ones.\nYou can modify the StorageName in GMAchievementToolLogic.\n\n5. UIHUD\nYou can use the UIHUD model to conduct achievement tests.\n\n=======================================\n## Usage\n\nPress the F1 key to open the UI, where you can view achievement progress and modify user data through the debug interface.\n\nYou can configure achievement data in AchievementDataSet and AchievementStepDataSet.\n\n=======================================\n## Tool Usage\nYou can open the tool UI using the F2 key, which allows you to manage the user achievement data.\n\nThe start and end dates are stored and used in UTC time in the DataStorage.\n\nYou can set the time offset for your region using the \"User Time Offset\" option in the top-left corner of the tool.\nYou can retrieve and input data based on this time setting.\nIt does not affect the already stored date data.\n\nUser data should be safely modified only when the user is offline.\n\n=======================================\n## Action Event and Condition\n\nAchievements and quests process progress values by receiving ActionEvent through ActionCondition.\n\nDefine the desired Action in ActionEnum in advance, then create an ActionEvent and send it to UserEntity.\n\nPredefine the desired ActionCondition in ActionConditionEnum.\nInherit from ActionConditionData, add a new ActionConditionData, and implement it by overriding the necessary functions.\n\nThe `GetActionEnumList` functions must be implemented.\n\nImplements the 'Check' function and 'GetNextUserValue' function to verify whether the actionEvent is valid and to return the updated UserValue.\n\nSome conditions may require the value to be updated when a achievement is reset or when the user logs in.\nIn such cases, implement the IsUpdateNeeded and GetUpdatedValue functions.\n\n=======================================\n## Data Structure\n\n=======================================\n### AchievemntData\n\nId : Integer\n\nParentId : Parent achivementId. A parent data cannot have another parent.\n\nName : Name\n\nCategoryEnum : CategoryEnum\n\nCycleEnum : Setting CycleEnum resets achievements based on the reference time.\nThe reference time is configured using BaseHour and BaseDayOfWeek in DateTimeLogic.\n\nCondEnum, CondArg, CondExtra : Enter the ActionCondition settings that correspond to the achievement progress conditions.\n\nPriority : Achievements are listed in ascending order based on this value.\nIf the values are the same, they are sorted in ascending order by ID.\nIf not specified, the maximum integer value is applied.\n\nDisable : This data will not be loaded.\n\n=======================================\n### AchivementStepData\n\nId : Achivement Id\n\nStep : Achivement Step\nA single achievement data can have multiple step data.\nStep data must be entered in order.\n\nValue : Achivement Condition Integer Value.\nYou cannot enter a value that is the same as or smaller than the previous step's value.\n\nDescription : Step Description\n\nRewardItems : Reward Items. Uses ,| as the separator.\n\"itemId1,count1|itemId2,count2...\"\n\nDisable : This data will not be loaded.\n\n=======================================\n## License\n\nThis project is licensed under the MIT License.\nYou are free to use, modify, and distribute this project.\n\nHowever, the software is provided \"as is\", without warranty of any kind.\nFor more details, please see the LICENSE.(https://opensource.org/licenses/MIT)\n\n=======================================\n## Happy Coding!\n]]",
      "ModifyTime": "10/01/2025 14:23:34"
    }
  }
}