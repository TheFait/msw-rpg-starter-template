@Logic
script QuestCategoryEnum extends Logic

	property table EnumToStrTable = {}

	property table EnumToUIStrTable = {}

	property table StrToEnumTable = {}

	property integer None = 0

	property integer Epic = 1

	property integer Sub = 2

	property integer Cycle = 3

	method boolean Init()
		local enumStrList = {
			{ "Epic", "Epic" },
			{ "Sub", "Sub" },
			{ "Cycle", "Repeatable" },
		}
		
		local enumToStrTable = self.EnumToStrTable
		local enumToUIStrTable = self.EnumToUIStrTable
		local strToEnumTable = self.StrToEnumTable
		
		for i = 1, #enumStrList do
			local str = enumStrList[i][1]
			local uiStr = enumStrList[i][2]
			local enum = self[str]
			
			if enum == nil then
				log_error("Cannot find enum. " .. str)
				return false
			end
			
			if enumToStrTable[enum] ~= nil then
				log_error("Already existing enum. " .. str)	
				return false
			end
			
			enumToStrTable[enum] = str
			enumToUIStrTable[enum] = uiStr
			strToEnumTable[str] = enum
		end
		
		return true
	end

	method integer ToEnum(string str)
		local enum = self.StrToEnumTable[str]
		if enum == nil then
			return self.None
		end
		
		return enum
	end

	method string ToStr(integer enum)
		return self.EnumToStrTable[enum]
	end

	method string ToUIStr(integer enum)
		return self.EnumToUIStrTable[enum]
	end

end