@Component
script UIRankingHUD extends Component

	property TextComponent Text_Id = nil

	property TextComponent Text_Score = nil

	property TextComponent Text_Extra = nil

	property Entity Btn_Force = nil

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		local entity = self.Entity
		
		local panel = entity:GetChildByName("Panel")
		self.Text_Id = panel:GetChildByName("Text_Id").TextComponent
		self.Text_Score = panel:GetChildByName("Text_Score").TextComponent
		self.Text_Extra = panel:GetChildByName("Text_Extra").TextComponent
		
		local btn_force = panel:GetChildByName("Btn_Force")
		btn_force:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Force)
		self.Btn_Force = btn_force
		
		local btn_register = panel:GetChildByName("Btn_Register")
		btn_register:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Register)
		
		local btn_exit = panel:GetChildByName("Btn_Exit")
		btn_exit:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Exit)
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Register()
		local id = math.tointeger(tonumber(self.Text_Id.Text))
		if id == nil then
			return
		end
		
		local score = math.tointeger(tonumber(self.Text_Score.Text))
		if score == nil then
			return
		end
		
		local extra = self.Text_Extra.Text
		local force = self:IsForce()
		
		_RankingViewLogic:RequestRegisterRanking(id, score, extra, force)
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Force()
		local isForce = self:IsForce()
		if isForce then
			self.Btn_Force.TextComponent.Text = ""
		else
			self.Btn_Force.TextComponent.Text = "V "
		end
	end

	@ExecSpace("ClientOnly")
	method boolean IsForce()
		local text = self.Btn_Force.TextComponent.Text
		if _Util:IsNilorEmptyString(text) then
			return false
		end
		
		return true
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Exit()
		self.Entity.Enable = false
	end

end