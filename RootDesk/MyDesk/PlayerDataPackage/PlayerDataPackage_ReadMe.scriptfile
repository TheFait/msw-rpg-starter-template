{
  "Id": "",
  "GameId": "",
  "EntryKey": "scriptfile://e9c4a93c-8290-4535-92b5-0a46f51f9a9c",
  "ContentType": "x-mod/scriptfile",
  "Content": "",
  "Usage": 0,
  "UsePublish": 1,
  "UseService": 0,
  "CoreVersion": "1.25.0.0",
  "StudioVersion": "0.1.0.0",
  "DynamicLoading": 0,
  "ContentProto": {
    "Use": "Json",
    "Json": {
      "Name": "PlayerDataPackage_ReadMe",
      "Id": "e9c4a93c-8290-4535-92b5-0a46f51f9a9c",
      "Script": "--[[\n# PlayerData Package\nThis PlayerData package is an integrated module that handles essential player management functions within the game.\n\n=======================================\n## Features\n\n1. Loading Screen Support\nManages the loading screen displayed when players join the game, ensuring a smooth entry experience.\n\n2. Player Kick and Ban System\nAllows administrators to kick or ban players using multiple ProfileCodes, enabling effective moderation of inappropriate behavior.\nBanInfo is stored and managed in GlobalDataStorage.\n\n3. Player Data Save and Load Component\nThe PlayerData component securely saves and retrieves players' basic information as needed.\nPlayer information is stored and managed in UserDataStorage.\n\n4. Admin Tool for Data Modification\nProvides a tool for administrators to modify players’ basic information directly, allowing flexible management and operation.\n\n=======================================\n## Recommendation\n\nIt is recommended to set PlayerEntityAuthorityCheck to true in WorldConfig.\nIf this setting is false, the server function is exposed to all clients, which may lead to security vulnerabilities.\n\n=======================================\n## Installation\n\nThis package is available for use after import, but some initial setup is required.\n\n1. The following components need to be added to the DefaultPlayer.\n- PlayerDBManager, PlayerData\n\n2. Admin Permissions Check for Tool Usage\nYou need to check if the user has admin permissions using the AdminLogic:IsAdmin function.\n\n3. UI Path Configuration\nYou need to set the spawn paths for the message UI and the tool UI.\nThe UI Path can be modified in PlayerDataSampleUILogic, PlayerBanSampleUILogic, PopupSampleUILogic.\n\n4. DataStorage Name Configuration\nThe names and tags you are using might overlap with existing ones.\nYou can modify the storageName in GMPlayerDataToolLogic, GMPlayerBanToolLogic.\n\n5. UIGroup Initialization\nCreate a new UIGroup and rename it to 'SystemGroup'.\nAdd the UILoading Model to this UIGroup.\nThis UIGroup is used in LoadingSampleUILogic and PopupSampleUILogic, and its name can be changed.\n\n=======================================\n## Player Data Management System\n\n### Overview of PlayerDBManager and PlayerData Integration \n\nPlayerDBManager is responsible for loading and saving data used by components like PlayerData from/to DataStorage.\nCreators can add new components similar to PlayerData with similar functionality.\n\nPlayerDBManager calls the following four functions in PlayerData:\n- LoadFromDB\n- OnLoadedDataFromDB\n- PostOnLoadedDataFromDB\n -SaveToDB\n\nNewly added components should implement these functions as well so that PlayerDBManager can call them automatically for integration.\n\n### PlayerData Internal Handling\n\nPlayerData uses the PlayerBasicInfo struct to serialize and deserialize data.\n\nIt uses IsSaveDB(DirtyFlag) to check if data has changed, and only saves to DataStorage when modifications occur.\n\nData saving is performed periodically by PlayerDBManager.\n\n=======================================\n## Timing of Loading Screen Removal\n\n### Loading Screen Removal Process\n\n1. Server data loads first, followed by client data loading.\n\n2. Once client data loading is complete, the client requests player information from the server (via NotifyWorldDataLoadCompleted).\n\n3. Player information is then loaded and synchronized between client and server.\n\n4. When player data initialization finishes successfully on both client and server sides, the loading screen is removed.\n\n### Error Handling\n\nIf an issue occurs with the player’s data during this process, that specific player will be kicked.\n\nIf there is a problem loading the world data, all players will be kicked.\n\n=======================================\n## PlayerData Tool Usage\n\nYou can open the tool UI using the F3 key, which allows you to manage the player data.\nYou can use this tool to modify PlayerData.\nThe data that makes up PlayerData is only an example, and you are free to add various other data as needed.\n\nYou can set the time offset for your region using the \"User Time Offset\" option in the top-left corner of the tool.\nYou can retrieve and input data based on this time setting.\nIt does not affect the already stored date data.\n\nUser data should be safely modified only when the user is offline.\n\n=======================================\n## PlayerBan Tool Usage\n\nYou can open the tool UI using the F4 key, which allows you to manage player ban information and kick players.\n\nYou can set the time offset for your region using the \"User Time Offset\" option in the top-left corner of the tool.\nYou can retrieve and input data based on this time setting.\nIt does not affect the already stored date data.\n\n### About Ban\n\nWhen a player enters, their ban information is checked first, and the ban is enforced if applicable.\nBanned users will see a popup message and will be automatically kicked after a specified duration.\nIf the player is not banned, their information is loaded from DataStorage and initialized.\n\nThe scope of Ban includes all spaces (world instances and rooms).\nBan can be set with a start and end time.\n\nIn the Edit Panel, you can modify ban information for individual users.\nYou can also use BulkEdit to update the ban information for multiple users simultaneously.\n\nMessage : Display a popup message to the user.\nThis is typically used to indicate the reason for the ban.\n\nExtra : Administrators can write notes about the user.\nThese notes are not visible to the user.\n\n### About Kick\n\nThe scope of Kick includes all spaces (world instances and rooms).\nKick information is not stored in DataStorage.\n\nWhen a kick is requested, the target user will see the popup message written by the administrator.\nAfter a specified duration, the user will be automatically kicked.\n\nIf Direct Kick is used, the user will be immediately kicked from the server without displaying a popup message. \n\n=======================================\n## Loading UI Test Instructions\n\nPress F5/F6 to test fade-in and fade-out transitions on the loading screen.\nScript location: LoadingSampleUILogic.\n\n=======================================\n## Cautions\n\nIf too many users are banned or kicked at once, it can cause server overload.\nAdditionally, it may excessively consume DataStorage credits.\n\n=======================================\n## License\n\nThis project is licensed under the MIT License.\nYou are free to use, modify, and distribute this project.\n\nHowever, the software is provided \"as is\", without warranty of any kind.\nFor more details, please see the LICENSE.(https://opensource.org/licenses/MIT)\n\n=======================================\n## Happy Coding!\n]]\n",
      "ModifyTime": "09/15/2025 12:47:52"
    }
  }
}